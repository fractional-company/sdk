[
  {
    "inputs": [
      { "internalType": "address", "name": "_buyout", "type": "address" },
      { "internalType": "address", "name": "_registry", "type": "address" },
      { "internalType": "address", "name": "_supply", "type": "address" }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": true, "internalType": "address", "name": "_vault", "type": "address" },
      {
        "indexed": false,
        "internalType": "contract IModule[]",
        "name": "_modules",
        "type": "address[]"
      }
    ],
    "name": "ActiveModules",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "_from", "type": "address" },
      { "internalType": "address", "name": "_to", "type": "address" },
      { "internalType": "address[]", "name": "_tokens", "type": "address[]" },
      { "internalType": "uint256[]", "name": "_ids", "type": "uint256[]" },
      { "internalType": "uint256[]", "name": "_amounts", "type": "uint256[]" },
      { "internalType": "bytes[]", "name": "_datas", "type": "bytes[]" }
    ],
    "name": "batchDepositERC1155",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "_from", "type": "address" },
      { "internalType": "address", "name": "_to", "type": "address" },
      { "internalType": "address[]", "name": "_tokens", "type": "address[]" },
      { "internalType": "uint256[]", "name": "_amounts", "type": "uint256[]" }
    ],
    "name": "batchDepositERC20",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "_from", "type": "address" },
      { "internalType": "address", "name": "_to", "type": "address" },
      { "internalType": "address[]", "name": "_tokens", "type": "address[]" },
      { "internalType": "uint256[]", "name": "_ids", "type": "uint256[]" }
    ],
    "name": "batchDepositERC721",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "buyout",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "_fractionSupply", "type": "uint256" },
      { "internalType": "contract IModule[]", "name": "_modules", "type": "address[]" },
      { "internalType": "address[]", "name": "plugins", "type": "address[]" },
      { "internalType": "bytes4[]", "name": "selectors", "type": "bytes4[]" },
      { "internalType": "bytes32[]", "name": "_mintProof", "type": "bytes32[]" }
    ],
    "name": "deployVault",
    "outputs": [{ "internalType": "address", "name": "vault", "type": "address" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "contract IModule[]", "name": "_modules", "type": "address[]" }],
    "name": "generateMerkleTree",
    "outputs": [{ "internalType": "bytes32[]", "name": "hashes", "type": "bytes32[]" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getLeafNodes",
    "outputs": [{ "internalType": "bytes32[]", "name": "nodes", "type": "bytes32[]" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPermissions",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "module", "type": "address" },
          { "internalType": "address", "name": "target", "type": "address" },
          { "internalType": "bytes4", "name": "selector", "type": "bytes4" }
        ],
        "internalType": "struct Permission[]",
        "name": "permissions",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32[]", "name": "_data", "type": "bytes32[]" },
      { "internalType": "uint256", "name": "_node", "type": "uint256" }
    ],
    "name": "getProof",
    "outputs": [{ "internalType": "bytes32[]", "name": "", "type": "bytes32[]" }],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "bytes32[]", "name": "_data", "type": "bytes32[]" }],
    "name": "getRoot",
    "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "_left", "type": "bytes32" },
      { "internalType": "bytes32", "name": "_right", "type": "bytes32" }
    ],
    "name": "hashLeafPairs",
    "outputs": [{ "internalType": "bytes32", "name": "data", "type": "bytes32" }],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "x", "type": "uint256" }],
    "name": "log2ceil_naive",
    "outputs": [{ "internalType": "uint256", "name": "ceil", "type": "uint256" }],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "bytes[]", "name": "_data", "type": "bytes[]" }],
    "name": "multicall",
    "outputs": [{ "internalType": "bytes[]", "name": "results", "type": "bytes[]" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "registry",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "supply",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "_root", "type": "bytes32" },
      { "internalType": "bytes32[]", "name": "_proof", "type": "bytes32[]" },
      { "internalType": "bytes32", "name": "_valueToProve", "type": "bytes32" }
    ],
    "name": "verifyProof",
    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
    "stateMutability": "pure",
    "type": "function"
  }
]
